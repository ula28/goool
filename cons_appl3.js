/* Задание на урок:

1) Первую часть задания повторить по уроку

2) Создать функцию showMyDB, которая будет проверять свойство privat. Если стоит в позиции
false - выводит в консоль главный объект программы

3) Создать функцию writeYourGenres в которой пользователь будет 3 раза отвечать на вопрос 
"Ваш любимый жанр под номером ${номер по порядку}". Каждый ответ записывается в массив данных
genres

P.S. Функции вызывать не обязательно*/

// Код возьмите из предыдущего домашнего задания

//========================================================================================================================================================
'use strict';

// функции - строительные блоки программмы
// приведем в функциональный вид приложение

// начнем с ф-ии start.  поместим в нее инициализирующий вопрос, с которого начинаем программу ===========================================================
// добавим проверку, чтобы пользователь не мог отменить вопрос, ввести пустую строку или ввести не число

// создали глобальную переменную
let numberOfFilms;

function start() {
// теперь вфункции можем ее менятьв зависимости от того, что ввел пользователь
numberOfFilms = +prompt("Сколько фильмов вы уже посмотрели?", "");

// пока что то происходит или не происходиит будем выполнять какие-то действия
// проверять на првду будем. Если пользователь отменил вопрос(вернул null), ввел пустую строку или ввел не число, то будем повторять вопрос
// МЕТОД isNaN принимает в себя аргумент numberOfFilms, проверяет его... если внутри не число, то возвращает правду
while (numberOfFilms == '' || numberOfFilms == null || isNaN(numberOfFilms)) {

	numberOfFilms = +prompt("Сколько фильмов вы уже посмотрели?", "");

	}

}
// не забывать вызывать функции, чтобы они отображались
start();

// база данных(DB DATA BASE)----глобальная переменная
const personalMovieDB = {
	count: numberOfFilms,
	movies: {},
	actors: {},
	genres: [],
	privat: false
};

// ЭТОТ ЦИКЛ БУДЕМ ВЫЗЫВАТЬ ТОЛЬКО ПО ТРЕБОВАНИЮ т.е. создать функцию, которая бу ее оборачивать

function rememberMyFilms(){
	// автоматизируем поцесс задавания вопроосв с помощью циклов, чтобы не дублировать вопросы
for (let i=0; i<2; i++){
	// будем повторять вопросы, пока i<2 и шагать к следующему i++ // для того ,чтобы исключить попадания пробелов (а иногда просто пробелв -это вся введнная пользователем инфа) используем метод trim()
	const a = prompt("Один из последних просмотренных фильмов?", "").trim(),
  			b = prompt("На сколько оцените его?", "");
// сделать так чтобы пользователь не смог отсавить пустой ответ в виде пустой строки, отменить ответ или ввести название фильма длиннее, чем 50 символов.Если это происходит, то возвращаем пользователя к вопросам опять
// если пользователь не нажл отмену(null), пустую строку(не нжал ОК без ввода ответа, длина ответа меньше 50 символов)
	if(a!=null && b!=null && a!= "" && b!= "" && a.length <50){
		// то работаем: записываем ответы пользователя в обьект в вариаанте : ключ-значение
		personalMovieDB.movies[a] = b;
		console.log("done");
// если что-то произошло из выше указанного, то откатим цикл назад, чтобы пользователь опять отвечал заново на вопросы
	} else{
		console.log("error");
		i--;
		}
	}
}
// rememberMyFilms();

// функция определения уровня кинонасмотренности
function detectPersonalLevel(){

	if(personalMovieDB.count<10){
		console.log("Просмотрено довольно мало фильмов");
	} else if(personalMovieDB.count>=10 && personalMovieDB.count<30){
		console.log("вы классический пользователь");
	}else if(personalMovieDB.count>=30){
		console.log("вы киноман");
	}else{
		console.log("произошла ошибка");
	}
}
// detectPersonalLevel();

// ТЕПЕРЬ У НАС ЕСТЬ различные ФУНКЦИИ, КОТОРЫЕ ПРОИЗВОДЯТ ОПРДЕЛЕННЫЕ РАБОТЫ и вызываютчя тогда, когда они необходимы
// позже подвяжем эти функции под определенные действия пользователя. Нпрмер, пользователь кликнул на кнопку показать его уровень и у нас вызывается эта функция
// detectPersonalLevel();
// дойдем до работы с интерфейсом, чтобы взаимодействовать с элементами на сайте

// В КАЖДУЮ ФУНКЦИЮ НУЖНО ПЕРЕДАВАТЬ ТО,с чем она бу работать. например:rememberMyFilms() будет рработать с personalMovieDB.movies- это аргумент



// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=--==-=-=-=-=-=-

// 2) Создать функцию showMyDB, которая будет проверять свойство privat. Если стоит в позиции
// false (база данных не скрытая) - выводит в консоль главный объект программы

// изменим тут шаблон поведения. закинем в функцию аргумент
function showMyDB(hidden){
	// если БД не скрыта(передаем зачение свойства privat, если оно false, то проверка покажет  !false -- то мы ее выводим), если она true, то проверка покажет  !true и ничего выводиться не будет
if(!hidden){
	// показываем главный обьект
console.log(personalMovieDB); 
	}

}
showMyDB(personalMovieDB.privat);

// так как в privat  стоит false, то в консоли показывается наша БАЗА ДАННЫХ
//  когда там стоит true, то ничего не выводится, так как БД СКРЫТАЯ

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-----------------------------------

//  3) Создать функцию writeYourGenres в которой пользователь будет 3 раза отвечать на вопрос 
// "Ваш любимый жанр под номером ${номер по порядку}". Каждый ответ записывается в массив данных
// genres

function writeYourGenres(){
	// задавать польз. 3 раза один и тот же вопрос. начинаем цикл с 1, так как, когда записываем в БД какие то вещи: нам нужно вывести ("Ваш любимый жанр под номером ${номер по порядку}")- пользователь привык , что номер по порядку анчинается с 1(он не знает, что в программировании нчинается с 0)
	for (let i = 1; i<=3; i++){
		// задаем вопрос пльзователю.так как у нас i нпчианется с 1, то подставим i, для этого поменяем кавычки
		// так как используем эту переменную тоько для передачи значений, то можем соратить
		// const genre = prompt(`Ваш любимый жанр под номером ${i}`);
		// то что ответил пользователь записать в БД  Каждый ответ записывается в массив данных
// genres
// только для пользователя выводим нумерацию, начиная с 1. но как только начинаем записывать в массив, то начинаем с 0 - [i - 1]
		// personalMovieDB.genres[i - 1] = genre;
		// не испотльзуем промежуточную переменную, а напрямую присвоим. так код работает на милилмили секунды быстрее, за счет того, что ему не нужно создавать промежуточную переменнную
		personalMovieDB.genres[i - 1] = prompt(`Ваш любимый жанр под номером ${i}`);
	}
}
writeYourGenres();